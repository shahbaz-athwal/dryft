name: dryft
services:
  dryft-api:
    container_name: dryft-api
    image: ghcr.io/shahbaz-athwal/dryft-api:latest
    environment:
      - PORT=4000
      - NODE_ENV=production
      - FRONTEND_URL
      - BETTER_AUTH_SECRET
      - ACADIA_USERNAME
      - ACADIA_PASSWORD
      - INNGEST_EVENT_KEY
      - INNGEST_SIGNING_KEY
    command: "bun run api:start"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.dryft-api.rule=Host(`api.dryft.ca`)"
      - "traefik.http.routers.dryft-api.entrypoints=websecure"
      - "traefik.http.routers.dryft-api.tls=true"
      - "traefik.http.routers.dryft-api.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - traefik
      - postgres

  dryft-api-dev:
    container_name: dryft-api-dev
    image: ghcr.io/shahbaz-athwal/dryft-api:latest
    environment:
      - PORT=4000
      - NODE_ENV=production
      - DATABASE_URL=${DEV_DATABASE_URL}
      - FRONTEND_URL=${DEV_FRONTEND_URL}
      - BETTER_AUTH_SECRET=${DEV_BETTER_AUTH_SECRET}
      - ACADIA_USERNAME
      - ACADIA_PASSWORD
      - INNGEST_EVENT_KEY=${DEV_INNGEST_EVENT_KEY}
      - INNGEST_SIGNING_KEY=${DEV_INNGEST_SIGNING_KEY}
    command: "bun run api:start"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.dryft-api-dev.rule=Host(`api-dev.dryft.ca`)"
      - "traefik.http.routers.dryft-api-dev.entrypoints=websecure"
      - "traefik.http.routers.dryft-api-dev.tls=true"
      - "traefik.http.routers.dryft-api-dev.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - traefik
      - postgres

networks:
  traefik:
    external: true
  postgres:
    external: true
